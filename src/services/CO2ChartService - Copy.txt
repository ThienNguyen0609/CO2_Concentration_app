import { getConcentrationByTimestamp } from "./concentration";

const handlePackageLost = (len, seriesLen, series, seriesName, data) => {
  let qualityPackageLost = len - seriesLen
  let count = 1
  console.log(seriesName);
  series.forEach((item, index, array) => {
    if (index + count === item.packageNumber - 1 && array[index + 1].packageNumber !== item.packageNumber && qualityPackageLost !== 0) {
      console.log(item.packageNumber - 1)
      qualityPackageLost--;
      data.splice(index + count, 0, null)
      count++;
    }
  })
}

const handleGetByTimeStamp3h = async (setSeries, setCategiries) => {
  // ---------------------------------------- Test -----------------------------------------//

  // const timestampForSeries1 = {
  //   min: "2024-06-18T07:31:25.000Z",
  //   max: "2024-06-18T10:31:25.000Z",
  // };
  // const timestampForSeries2 = {
  //   min: "2024-06-18T14:50:31.000Z",
  //   max: "2024-06-18T17:50:31.000Z",
  // };
  // const timestampForSeries3 = {
  //   min: "2024-06-19T13:55:32.000Z",
  //   max: "2024-06-19T16:55:32.000Z"
  // }
  // const timestampForSeries4 = {
  //   min: "2024-06-20T05:07:17.000Z",
  //   max: "2024-06-20T08:07:17.000Z"
  // }
  // const timestampForSeries5 = {
  //   min: "2024-06-20T10:24:50.000Z",
  //   max: "2024-06-20T13:24:50.000Z"
  // }


  // -------------------------------- Real ---------------------------------//
  const timestampForSeries1 = {
    min: "2024-06-25T07:24:13.000Z",
    max: "2024-06-25T10:24:13.000Z",
  };
  const timestampForSeries2 = {
    min: "2024-06-25T13:59:42.000Z",
    max: "2024-06-25T16:59:42.000Z",
  };
  const timestampForSeries3 = {
    min: "2024-06-26T07:26:54.000Z",
    max: "2024-06-26T10:26:54.000Z"
  }
  const timestampForSeries4 = {
    min: "2024-06-26T01:39:44.000Z",
    max: "2024-06-26T04:39:44.000Z"
  }
  const timestampForSeries5 = {
    min: "2024-06-24T14:41:26.000Z",
    max: "2024-06-24T17:41:26.000Z"
  }

  const series1 = await getConcentrationByTimestamp(timestampForSeries1);
  let data1 = [series1[0].co2, ...series1.map(item => item.co2)]
  if(series1.length < 1800) {
    handlePackageLost(1800, series1.length, series1, "3h series1", data1)
  }

  const series2 = await getConcentrationByTimestamp(timestampForSeries2);
  let data2 = [series2[0].co2, ...series2.map(item => item.co2)]
  if(series2.length < 1800) {
    handlePackageLost(1800, series2.length, series2, "3h series2", data2)
  }

  const series3 = await getConcentrationByTimestamp(timestampForSeries3);
  let data3 = [series3[0].co2, ...series3.map(item => item.co2)]
  if(series3.length < 1800) {
    handlePackageLost(1800, series3.length, series3, "3h series3", data3)
  }

  const series4 = await getConcentrationByTimestamp(timestampForSeries4);
  let data4 = [series4[0].co2, ...series4.map(item => item.co2)]
  if(series4.length < 1800) {
    handlePackageLost(1800, series4.length, series4, "3h series4", data4)
  }

  const series5 = await getConcentrationByTimestamp(timestampForSeries5);
  let data5 = [series5[0].co2, ...series5.map(item => item.co2)]
  if(series5.length < 1800) {
    handlePackageLost(1800, series5.length, series5, "3h series5", data5)
  }

  setSeries([
    {
      name: "1mg",
      data: data1,
    },
    {
      name: "2mg",
      data: data2,
    },
    {
      name: "3mg",
      data: data3,
    },
    {
      name: "4mg",
      data: data4,
    },
    {
      name: "5mg",
      data: data5,
    },
  ]);
  const cate = [];
  let timestamp = 1704067200000;
  for (let i = 0; i < 1801; i++) {
    cate.push(timestamp);
    timestamp += 6000;
  }
  setCategiries(cate);
};


// ====================================== 2 TIENG ============================================//

const handleGetByTimeStamp2h = async (setSeries, setCategiries) => {
  // ---------------------------------------- Test -----------------------------------------//

  // const timestampForSeries1 = {
  //   min: "2024-06-18T07:31:25.000Z",
  //   max: "2024-06-18T09:31:25.000Z",
  // };
  // const timestampForSeries2 = {
  //   min: "2024-06-18T14:50:31.000Z",
  //   max: "2024-06-18T16:50:31.000Z",
  // };
  // const timestampForSeries3 = {
  //   min: "2024-06-19T13:55:32.000Z",
  //   max: "2024-06-19T15:55:32.000Z"
  // }
  // const timestampForSeries4 = {
  //   min: "2024-06-20T05:07:17.000Z",
  //   max: "2024-06-20T07:07:17.000Z"
  // }
  // const timestampForSeries5 = {
  //   min: "2024-06-20T10:24:50.000Z",
  //   max: "2024-06-20T12:24:50.000Z"
  // }


  // -------------------------------- Real ---------------------------------//

  const timestampForSeries1 = {
    min: "2024-06-25T07:24:13.000Z",
    max: "2024-06-25T09:24:13.000Z",
  };
  const timestampForSeries2 = {
    min: "2024-06-25T13:59:42.000Z",
    max: "2024-06-25T15:59:42.000Z",
  };
  const timestampForSeries3 = {
    min: "2024-06-26T07:26:54.000Z",
    max: "2024-06-26T09:26:54.000Z"
  }
  const timestampForSeries4 = {
    min: "2024-06-26T01:39:44.000Z",
    max: "2024-06-26T03:39:44.000Z"
  }
  const timestampForSeries5 = {
    min: "2024-06-24T14:41:26.000Z",
    max: "2024-06-24T16:41:26.000Z"
  }
  
  
  const series1 = await getConcentrationByTimestamp(timestampForSeries1);
  let data1 = [series1[0].co2, ...series1.map(item => item.co2)]
  if(series1.length < 1200) {
    handlePackageLost(1200, series1.length, series1, "2h series1", data1)
  }

  const series2 = await getConcentrationByTimestamp(timestampForSeries2);
  let data2 = [series2[0].co2, ...series2.map(item => item.co2)]
  if(series2.length < 1200) {
    handlePackageLost(1200, series2.length, series2, "2h series2", data2)
  }

  const series3 = await getConcentrationByTimestamp(timestampForSeries3);
  let data3 = [series3[0].co2, ...series3.map(item => item.co2)]
  if(series3.length < 1200) {
    handlePackageLost(1200, series3.length, series3, "2h series3", data3)
  }

  const series4 = await getConcentrationByTimestamp(timestampForSeries4);
  let data4 = [series4[0].co2, ...series4.map(item => item.co2)]
  if(series4.length < 1200) {
    handlePackageLost(1200, series4.length, series4, "2h series4", data4)
  }

  const series5 = await getConcentrationByTimestamp(timestampForSeries5);
  let data5 = [series5[0].co2, ...series5.map(item => item.co2)]
  if(series5.length < 1200) {
    handlePackageLost(1200, series5.length, series5, "2h series5", data5)
  }

  setSeries([
    {
      name: "1mg",
      data: data1,
    },
    {
      name: "2mg",
      data: data2,
    },
    {
      name: "3mg",
      data: data3,
    },
    {
      name: "4mg",
      data: data4,
    },
    {
      name: "5mg",
      data: data5,
    },
  ]);
  const cate = [];
  let timestamp = 1704067200000;
  for (let i = 0; i < 1201; i++) {
    cate.push(timestamp);
    timestamp += 6000;
  }
  setCategiries(cate);
};

// ============================================ 1 TIENG ===================================//

const handleGetByTimeStamp1h = async (setSeries, setCategiries) => {
  // ---------------------------------------- Test -----------------------------------------//

  // const timestampForSeries1 = {
  //   min: "2024-06-18T07:31:25.000Z",
  //   max: "2024-06-18T08:31:25.000Z",
  // };
  // const timestampForSeries2 = {
  //   min: "2024-06-18T14:50:31.000Z",
  //   max: "2024-06-18T15:50:31.000Z",
  // };
  // const timestampForSeries3 = {
  //   min: "2024-06-19T13:55:32.000Z",
  //   max: "2024-06-19T14:55:32.000Z"
  // }
  // const timestampForSeries4 = {
  //   min: "2024-06-20T05:07:17.000Z",
  //   max: "2024-06-20T06:07:17.000Z"
  // }
  // const timestampForSeries5 = {
  //   min: "2024-06-20T10:24:50.000Z",
  //   max: "2024-06-20T11:24:50.000Z"
  // }
  

  // -------------------------------- Real ---------------------------------//
  const timestampForSeries1 = {
    min: "2024-06-25T07:24:13.000Z",
    max: "2024-06-25T08:24:13.000Z",
  };
  const timestampForSeries2 = {
    min: "2024-06-25T13:59:42.000Z",
    max: "2024-06-25T14:59:42.000Z",
  };
  const timestampForSeries3 = {
    min: "2024-06-26T07:26:54.000Z",
    max: "2024-06-26T08:26:54.000Z"
  }
  const timestampForSeries4 = {
    min: "2024-06-26T01:39:44.000Z",
    max: "2024-06-26T02:39:44.000Z"
  }
  const timestampForSeries5 = {
    min: "2024-06-24T14:41:26.000Z",
    max: "2024-06-24T15:41:26.000Z"
  }

  const series1 = await getConcentrationByTimestamp(timestampForSeries1);
  let data1 = [series1[0].co2, ...series1.map(item => item.co2)]
  if(series1.length < 600) {
    handlePackageLost(600, series1.length, series1,  "1h series1",data1)
  }

  const series2 = await getConcentrationByTimestamp(timestampForSeries2);
  let data2 = [series2[0].co2, ...series2.map(item => item.co2)]
  if(series2.length < 600) {
    handlePackageLost(600, series2.length, series2,  "1h series2",data2)
  }

  const series3 = await getConcentrationByTimestamp(timestampForSeries3);
  let data3 = [series3[0].co2, ...series3.map(item => item.co2)]
  if(series3.length < 600) {
    handlePackageLost(600, series3.length, series3,  "1h series3",data3)
  }

  const series4 = await getConcentrationByTimestamp(timestampForSeries4);
  let data4 = [series4[0].co2, ...series4.map(item => item.co2)]
  if(series4.length < 600) {
    handlePackageLost(600, series4.length, series4,  "1h series4",data4)
  }

  const series5 = await getConcentrationByTimestamp(timestampForSeries5);
  let data5 = [series5[0].co2, ...series5.map(item => item.co2)]
  if(series5.length < 600) {
    handlePackageLost(600, series5.length, series5,  "1h series5",data5)
  }

  setSeries([
    {
      name: "1mg",
      data: data1,
    },
    {
      name: "2mg",
      data: data2,
    },
    {
      name: "3mg",
      data: data3,
    },
    {
      name: "4mg",
      data: data4,
    },
    {
      name: "5mg",
      data: data5,
    },
  ]);
  const cate = [];
  let timestamp = 1704067200000;
  for (let i = 0; i < 601; i++) {
    cate.push(timestamp);
    timestamp += 6000;
  }
  setCategiries(cate);
};

export {
  handleGetByTimeStamp1h,
  handleGetByTimeStamp2h,
  handleGetByTimeStamp3h,
};
